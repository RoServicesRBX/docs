{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to SecureService An Introduction Hello and welcome, API dweller, and welcome to the SecureService API documentation! Each API endpoint comes with the required parameters, a description of what is does, and examples in tons of langauges! All endpoints have the base of https://api.secureservice.app & the header of key (your paid gamekey) is needed to access the API. Happy POSTing!","title":"Welcome to SecureService"},{"location":"#welcome-to-secureservice","text":"","title":"Welcome to SecureService"},{"location":"#an-introduction","text":"Hello and welcome, API dweller, and welcome to the SecureService API documentation! Each API endpoint comes with the required parameters, a description of what is does, and examples in tons of langauges! All endpoints have the base of https://api.secureservice.app & the header of key (your paid gamekey) is needed to access the API. Happy POSTing!","title":"An Introduction"},{"location":"API/Demote/","text":"Demote [POST] /api/ranking/demote/ This endpoint demotes the specified user. Request Body Body Description Type userId The user who you want to demote INTEGER groupId The group which the user is in INTEGER Examples Javascript Luau/Lua 5.2 async function sendReqest () { const response = await fetch ( 'https://api.secureservice.app/api/ranking/demote' , { method : 'POST' , headers : { 'Content-Type' : 'application/json' , 'key' : 'YOUR GAMEKEY HERE' }, body : JSON . stringify ({ userId : 'USER ID HERE' , groupId : 'GROUP ID HERE' }) }); return response . json (); } local HttpService = game : GetService ( \"HttpService\" ) local URL = \"https://api.secureservice.app/api/ranking/demote\" local function request () local response = HttpService : RequestAsync ( { Url = URL , Method = \"POST\" , Headers = { [ \"Content-Type\" ] = \"application/json\" , [ \"key\" ] = \"YOUR GAMEKEY HERE\" }, Body = HttpService : JSONEncode ({ userId = \"USER ID HERE\" , groupId = \"GROUP ID HERE\" }) } ) if response . Success then print ( \"Status code:\" , response . StatusCode , response . StatusMessage ) print ( \"Response body: \\n \" , response . Body ) else print ( \"The request failed:\" , response . StatusCode , response . StatusMessage ) end end local success , message = pcall ( request ) if not success then print ( \"Http Request failed:\" , message ) end","title":"Demote [POST]"},{"location":"API/Demote/#demote-post","text":"/api/ranking/demote/ This endpoint demotes the specified user.","title":"Demote [POST]"},{"location":"API/Demote/#request-body","text":"Body Description Type userId The user who you want to demote INTEGER groupId The group which the user is in INTEGER","title":"Request Body"},{"location":"API/Demote/#examples","text":"Javascript Luau/Lua 5.2 async function sendReqest () { const response = await fetch ( 'https://api.secureservice.app/api/ranking/demote' , { method : 'POST' , headers : { 'Content-Type' : 'application/json' , 'key' : 'YOUR GAMEKEY HERE' }, body : JSON . stringify ({ userId : 'USER ID HERE' , groupId : 'GROUP ID HERE' }) }); return response . json (); } local HttpService = game : GetService ( \"HttpService\" ) local URL = \"https://api.secureservice.app/api/ranking/demote\" local function request () local response = HttpService : RequestAsync ( { Url = URL , Method = \"POST\" , Headers = { [ \"Content-Type\" ] = \"application/json\" , [ \"key\" ] = \"YOUR GAMEKEY HERE\" }, Body = HttpService : JSONEncode ({ userId = \"USER ID HERE\" , groupId = \"GROUP ID HERE\" }) } ) if response . Success then print ( \"Status code:\" , response . StatusCode , response . StatusMessage ) print ( \"Response body: \\n \" , response . Body ) else print ( \"The request failed:\" , response . StatusCode , response . StatusMessage ) end end local success , message = pcall ( request ) if not success then print ( \"Http Request failed:\" , message ) end","title":"Examples"},{"location":"API/HandleRequest/","text":"Handle Join Request [POST] /api/ranking/handlejoinrequest/ This endpoint accepts or denies the provided join request. Request Body Body Description Type userId The user who's join request you want to handle INTEGER groupId The group which you want to look for the join request INTEGER boolean Should the join request be accepted? BOOLEAN Examples Javascript Luau async function sendReqest () { const response = await fetch ( 'https://api.secureservice.app/api/ranking/handlejoinrequest' , { method : 'POST' , headers : { 'Content-Type' : 'application/json' , 'key' : 'YOUR GAMEKEY HERE' }, body : JSON . stringify ({ userId : 'USER ID HERE' , groupId : 'GROUP ID HERE' , boolean : true / false }) }); return response . json (); } local HttpService = game : GetService ( \"HttpService\" ) local URL = \"https://api.secureservice.app/api/ranking/handlejoinrequest\" local function request () local response = HttpService : RequestAsync ( { Url = URL , Method = \"POST\" , Headers = { [ \"Content-Type\" ] = \"application/json\" , [ \"key\" ] = \"YOUR GAMEKEY HERE\" }, Body = HttpService : JSONEncode ({ userId = \"USER ID HERE\" , groupId = \"GROUP ID HERE\" , boolean : true / false }) } ) if response . Success then print ( \"Status code:\" , response . StatusCode , response . StatusMessage ) print ( \"Response body: \\n \" , response . Body ) else print ( \"The request failed:\" , response . StatusCode , response . StatusMessage ) end end local success , message = pcall ( request ) if not success then print ( \"Http Request failed:\" , message ) end","title":"Handle Join Request [POST]"},{"location":"API/HandleRequest/#handle-join-request-post","text":"/api/ranking/handlejoinrequest/ This endpoint accepts or denies the provided join request.","title":"Handle Join Request [POST]"},{"location":"API/HandleRequest/#request-body","text":"Body Description Type userId The user who's join request you want to handle INTEGER groupId The group which you want to look for the join request INTEGER boolean Should the join request be accepted? BOOLEAN","title":"Request Body"},{"location":"API/HandleRequest/#examples","text":"Javascript Luau async function sendReqest () { const response = await fetch ( 'https://api.secureservice.app/api/ranking/handlejoinrequest' , { method : 'POST' , headers : { 'Content-Type' : 'application/json' , 'key' : 'YOUR GAMEKEY HERE' }, body : JSON . stringify ({ userId : 'USER ID HERE' , groupId : 'GROUP ID HERE' , boolean : true / false }) }); return response . json (); } local HttpService = game : GetService ( \"HttpService\" ) local URL = \"https://api.secureservice.app/api/ranking/handlejoinrequest\" local function request () local response = HttpService : RequestAsync ( { Url = URL , Method = \"POST\" , Headers = { [ \"Content-Type\" ] = \"application/json\" , [ \"key\" ] = \"YOUR GAMEKEY HERE\" }, Body = HttpService : JSONEncode ({ userId = \"USER ID HERE\" , groupId = \"GROUP ID HERE\" , boolean : true / false }) } ) if response . Success then print ( \"Status code:\" , response . StatusCode , response . StatusMessage ) print ( \"Response body: \\n \" , response . Body ) else print ( \"The request failed:\" , response . StatusCode , response . StatusMessage ) end end local success , message = pcall ( request ) if not success then print ( \"Http Request failed:\" , message ) end","title":"Examples"},{"location":"API/Promote/","text":"Promote [POST] /api/ranking/promote/ This endpoint promotes the specified user. Request Body Body Description Type userId The user who you want to promote INTEGER groupId The group which the user is in INTEGER Examples Javascript Luau/Lua 5.2 async function sendReqest () { const response = await fetch ( 'https://api.secureservice.app/api/ranking/promote' , { method : 'POST' , headers : { 'Content-Type' : 'application/json' , 'key' : 'YOUR GAMEKEY HERE' }, body : JSON . stringify ({ userId : 'USER ID HERE' , groupId : 'GROUP ID HERE' }) }); return response . json (); } local HttpService = game : GetService ( \"HttpService\" ) local URL = \"https://api.secureservice.app/api/ranking/promote\" local function request () local response = HttpService : RequestAsync ( { Url = URL , Method = \"POST\" , Headers = { [ \"Content-Type\" ] = \"application/json\" , [ \"key\" ] = \"YOUR GAMEKEY HERE\" }, Body = HttpService : JSONEncode ({ userId = \"USER ID HERE\" , groupId = \"GROUP ID HERE\" }) } ) if response . Success then print ( \"Status code:\" , response . StatusCode , response . StatusMessage ) print ( \"Response body: \\n \" , response . Body ) else print ( \"The request failed:\" , response . StatusCode , response . StatusMessage ) end end local success , message = pcall ( request ) if not success then print ( \"Http Request failed:\" , message ) end","title":"Promote [POST]"},{"location":"API/Promote/#promote-post","text":"/api/ranking/promote/ This endpoint promotes the specified user.","title":"Promote [POST]"},{"location":"API/Promote/#request-body","text":"Body Description Type userId The user who you want to promote INTEGER groupId The group which the user is in INTEGER","title":"Request Body"},{"location":"API/Promote/#examples","text":"Javascript Luau/Lua 5.2 async function sendReqest () { const response = await fetch ( 'https://api.secureservice.app/api/ranking/promote' , { method : 'POST' , headers : { 'Content-Type' : 'application/json' , 'key' : 'YOUR GAMEKEY HERE' }, body : JSON . stringify ({ userId : 'USER ID HERE' , groupId : 'GROUP ID HERE' }) }); return response . json (); } local HttpService = game : GetService ( \"HttpService\" ) local URL = \"https://api.secureservice.app/api/ranking/promote\" local function request () local response = HttpService : RequestAsync ( { Url = URL , Method = \"POST\" , Headers = { [ \"Content-Type\" ] = \"application/json\" , [ \"key\" ] = \"YOUR GAMEKEY HERE\" }, Body = HttpService : JSONEncode ({ userId = \"USER ID HERE\" , groupId = \"GROUP ID HERE\" }) } ) if response . Success then print ( \"Status code:\" , response . StatusCode , response . StatusMessage ) print ( \"Response body: \\n \" , response . Body ) else print ( \"The request failed:\" , response . StatusCode , response . StatusMessage ) end end local success , message = pcall ( request ) if not success then print ( \"Http Request failed:\" , message ) end","title":"Examples"},{"location":"API/Setrank/","text":"SetRank [POST] /api/ranking/setrank/ This endpoint sets the rank of a specified user. Request Body Body Description Type userId The user who's rank you want to change (id) INTEGER groupId The group which you want to look for the join request INTEGER rankId The rank id you want the user ranked to INTEGER Examples Javascript Luau async function sendReqest () { const response = await fetch ( 'https://api.secureservice.app/api/ranking/setrank' , { method : 'POST' , headers : { 'Content-Type' : 'application/json' , 'key' : 'YOUR GAMEKEY HERE' }, body : JSON . stringify ({ user : 'USER ID HERE' , group : 'GROUP ID HERE' , rankid : 'RANK ID HERE' }) }); return response . json (); } local HttpService = game : GetService ( \"HttpService\" ) local URL = \"https://api.secureservice.app/api/ranking/setrank\" local function request () local response = HttpService : RequestAsync ( { Url = URL , Method = \"POST\" , Headers = { [ \"Content-Type\" ] = \"application/json\" , [ \"key\" ] = \"YOUR GAMEKEY HERE\" }, Body = HttpService : JSONEncode ({ userId = \"USER ID HERE\" , groupId = \"GROUP ID HERE\" , rankId : \"RANK ID HERE\" }) } ) if response . Success then print ( \"Status code:\" , response . StatusCode , response . StatusMessage ) print ( \"Response body: \\n \" , response . Body ) else print ( \"The request failed:\" , response . StatusCode , response . StatusMessage ) end end local success , message = pcall ( request ) if not success then print ( \"Http Request failed:\" , message ) end","title":"SetRank [POST]"},{"location":"API/Setrank/#setrank-post","text":"/api/ranking/setrank/ This endpoint sets the rank of a specified user.","title":"SetRank [POST]"},{"location":"API/Setrank/#request-body","text":"Body Description Type userId The user who's rank you want to change (id) INTEGER groupId The group which you want to look for the join request INTEGER rankId The rank id you want the user ranked to INTEGER","title":"Request Body"},{"location":"API/Setrank/#examples","text":"Javascript Luau async function sendReqest () { const response = await fetch ( 'https://api.secureservice.app/api/ranking/setrank' , { method : 'POST' , headers : { 'Content-Type' : 'application/json' , 'key' : 'YOUR GAMEKEY HERE' }, body : JSON . stringify ({ user : 'USER ID HERE' , group : 'GROUP ID HERE' , rankid : 'RANK ID HERE' }) }); return response . json (); } local HttpService = game : GetService ( \"HttpService\" ) local URL = \"https://api.secureservice.app/api/ranking/setrank\" local function request () local response = HttpService : RequestAsync ( { Url = URL , Method = \"POST\" , Headers = { [ \"Content-Type\" ] = \"application/json\" , [ \"key\" ] = \"YOUR GAMEKEY HERE\" }, Body = HttpService : JSONEncode ({ userId = \"USER ID HERE\" , groupId = \"GROUP ID HERE\" , rankId : \"RANK ID HERE\" }) } ) if response . Success then print ( \"Status code:\" , response . StatusCode , response . StatusMessage ) print ( \"Response body: \\n \" , response . Body ) else print ( \"The request failed:\" , response . StatusCode , response . StatusMessage ) end end local success , message = pcall ( request ) if not success then print ( \"Http Request failed:\" , message ) end","title":"Examples"},{"location":"API/Shout/","text":"Shout [POST] /api/ranking/shout/ This endpoint shouts a specified message in the specified group. Request Body Body Description Type groupId The group which you want to shout in INTEGER message The message you want posted on the shout STRING Examples Javascript Luau async function sendReqest () { const response = await fetch ( 'https://api.secureservice.app/api/ranking/shout' , { method : 'POST' , headers : { 'Content-Type' : 'application/json' , 'key' : 'YOUR GAMEKEY HERE' }, body : JSON . stringify ({ group : 'GROUP ID HERE' , message : 'SHOUT MESSAGE HERE' }) }); return response . json (); } local HttpService = game : GetService ( \"HttpService\" ) local URL = \"https://api.secureservice.app/api/ranking/shout\" local function request () local response = HttpService : RequestAsync ( { Url = URL , Method = \"POST\" , Headers = { [ \"Content-Type\" ] = \"application/json\" , [ \"key\" ] = \"YOUR GAMEKEY HERE\" }, Body = HttpService : JSONEncode ({ group = \"GROUP ID HERE\" , message : \"SHOUT MESSAGE HERE\" }) } ) if response . Success then print ( \"Status code:\" , response . StatusCode , response . StatusMessage ) print ( \"Response body: \\n \" , response . Body ) else print ( \"The request failed:\" , response . StatusCode , response . StatusMessage ) end end local success , message = pcall ( request ) if not success then print ( \"Http Request failed:\" , message ) end","title":"Shout [POST]"},{"location":"API/Shout/#shout-post","text":"/api/ranking/shout/ This endpoint shouts a specified message in the specified group.","title":"Shout [POST]"},{"location":"API/Shout/#request-body","text":"Body Description Type groupId The group which you want to shout in INTEGER message The message you want posted on the shout STRING","title":"Request Body"},{"location":"API/Shout/#examples","text":"Javascript Luau async function sendReqest () { const response = await fetch ( 'https://api.secureservice.app/api/ranking/shout' , { method : 'POST' , headers : { 'Content-Type' : 'application/json' , 'key' : 'YOUR GAMEKEY HERE' }, body : JSON . stringify ({ group : 'GROUP ID HERE' , message : 'SHOUT MESSAGE HERE' }) }); return response . json (); } local HttpService = game : GetService ( \"HttpService\" ) local URL = \"https://api.secureservice.app/api/ranking/shout\" local function request () local response = HttpService : RequestAsync ( { Url = URL , Method = \"POST\" , Headers = { [ \"Content-Type\" ] = \"application/json\" , [ \"key\" ] = \"YOUR GAMEKEY HERE\" }, Body = HttpService : JSONEncode ({ group = \"GROUP ID HERE\" , message : \"SHOUT MESSAGE HERE\" }) } ) if response . Success then print ( \"Status code:\" , response . StatusCode , response . StatusMessage ) print ( \"Response body: \\n \" , response . Body ) else print ( \"The request failed:\" , response . StatusCode , response . StatusMessage ) end end local success , message = pcall ( request ) if not success then print ( \"Http Request failed:\" , message ) end","title":"Examples"}]}